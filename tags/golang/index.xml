<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on isopov</title>
    <link>https://isopov.github.io/tags/golang/</link>
    <description>Recent content in Golang on isopov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 Nov 2020 13:35:52 +0300</lastBuildDate><atom:link href="https://isopov.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using map[]struct{} or map[]bool in Golang</title>
      <link>https://isopov.github.io/posts/map-bool-or-struct/</link>
      <pubDate>Sun, 01 Nov 2020 13:35:52 +0300</pubDate>
      
      <guid>https://isopov.github.io/posts/map-bool-or-struct/</guid>
      <description>In Golang you do not have set data structure. So you can use map instead. When you do not need values there are two options widely used - using empty struct{} or bool as value. struct{} should be more performant, while bool is more convinient. I decided to check the first promise myslef. Golang have benchamrks support in its standard library. SO I wrote this one:
package mapstruct import ( &amp;#34;math/rand&amp;#34; &amp;#34;testing&amp;#34; ) func input() []int { slice := make([]int, 10_000) for i := 0; i &amp;lt; 10_000; i++ { slice[i] = rand.</description>
    </item>
    
  </channel>
</rss>
