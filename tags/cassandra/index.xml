<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cassandra on isopov</title><link>https://isopov.github.io/tags/cassandra/</link><description>Recent content in Cassandra on isopov</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 05 Oct 2023 15:10:49 +0300</lastBuildDate><atom:link href="https://isopov.github.io/tags/cassandra/index.xml" rel="self" type="application/rss+xml"/><item><title>Cassandra lightweight transactions mixed with ordinary queries</title><link>https://isopov.github.io/posts/cassandra-lwt-queries-mix/</link><pubDate>Thu, 05 Oct 2023 15:10:49 +0300</pubDate><guid>https://isopov.github.io/posts/cassandra-lwt-queries-mix/</guid><description>&lt;p>Recently I&amp;rsquo;ve discovered that adding a simple &amp;ldquo;if exists&amp;rdquo; clause to query in Cassandra turns it into something completely different. Lightweight transaction is started that is not really compatible with running some data modification queries without such clause. I debugged this problem to the simple independent reproducer, so I&amp;rsquo;d like to share it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>@Testcontainers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fff;font-weight:bold">class&lt;/span> UpdateTest {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Container
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fff;font-weight:bold">private&lt;/span> &lt;span style="color:#fff;font-weight:bold">static&lt;/span> &lt;span style="color:#fff;font-weight:bold">final&lt;/span> CassandraContainer cassandra
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> = (CassandraContainer) &lt;span style="color:#fff;font-weight:bold">new&lt;/span> CassandraContainer(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;cassandra:4.1.3&amp;#34;&lt;/span>).&lt;span style="color:#007f7f">withExposedPorts&lt;/span>(9042);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fff;font-weight:bold">private&lt;/span> &lt;span style="color:#fff;font-weight:bold">static&lt;/span> CqlSession session;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @BeforeAll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fff;font-weight:bold">static&lt;/span> &lt;span style="color:#fff;font-weight:bold">void&lt;/span> setup() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session = CqlSession.&lt;span style="color:#007f7f">builder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#007f7f">addContactPoint&lt;/span>(cassandra.&lt;span style="color:#007f7f">getContactPoint&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#007f7f">withLocalDatacenter&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;datacenter1&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#007f7f">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;drop keyspace if exists updatetests&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;create keyspace updatetests with replication = {&amp;#39;class&amp;#39; : &amp;#39;SimpleStrategy&amp;#39;, &amp;#39;replication_factor&amp;#39; : 1}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;use updatetests&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;drop table if exists test&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;create table test (a text, b int, primary key(a))&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @AfterAll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fff;font-weight:bold">static&lt;/span> &lt;span style="color:#fff;font-weight:bold">void&lt;/span> tearDown() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fff;font-weight:bold">void&lt;/span> testLwtInsertAndLwtUpdate() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;insert into test(a,b) values(?,?) if not exists&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;x&amp;#34;&lt;/span>, 1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;update test set b=? where a=? if exists&amp;#34;&lt;/span>, 2, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;x&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertUpdate(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;x&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fff;font-weight:bold">void&lt;/span> testInsertAndLwtUpdate() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;insert into test(a,b) values(?,?)&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;y&amp;#34;&lt;/span>, 1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;update test set b=? where a=? if exists&amp;#34;&lt;/span>, 2, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;y&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertUpdate(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;y&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fff;font-weight:bold">void&lt;/span> testLwtInsertAndUpdate() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;insert into test(a,b) values(?,?) if not exists&amp;#34;&lt;/span>, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;z&amp;#34;&lt;/span>, 1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;update test set b=? where a=?&amp;#34;&lt;/span>, 2, &lt;span style="color:#0ff;font-weight:bold">&amp;#34;z&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertUpdate(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;z&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fff;font-weight:bold">private&lt;/span> &lt;span style="color:#fff;font-weight:bold">static&lt;/span> &lt;span style="color:#fff;font-weight:bold">void&lt;/span> assertUpdate(String id) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fff;font-weight:bold">var&lt;/span> res = session.&lt;span style="color:#007f7f">execute&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;select * from test where a=?&amp;#34;&lt;/span>, id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res.&lt;span style="color:#007f7f">forEach&lt;/span>(row -&amp;gt; assertEquals(2, row.&lt;span style="color:#007f7f">getInt&lt;/span>(&lt;span style="color:#0ff;font-weight:bold">&amp;#34;b&amp;#34;&lt;/span>)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Running this sample only 2 out of 3 tests pass. &lt;code>testInsertAndLwtUpdate&lt;/code> fails. What is even more interesting is that in my tests it reports lightweight transaction applied.&lt;/p></description></item></channel></rss>