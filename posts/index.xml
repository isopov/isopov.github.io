<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on isopov</title>
    <link>https://isopov.github.io/posts/</link>
    <description>Recent content in Posts on isopov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 15 Sep 2018 15:37:17 +0300</lastBuildDate><atom:link href="https://isopov.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CTE Oracle vs Postgres</title>
      <link>https://isopov.github.io/posts/cte-oracle-vs-postgres/</link>
      <pubDate>Sat, 15 Sep 2018 15:37:17 +0300</pubDate>
      
      <guid>https://isopov.github.io/posts/cte-oracle-vs-postgres/</guid>
      <description>Major part of my career to the moment passed working with databases and mostly with Oracle and Postgres. Several years ago I was really surprised by the difference in handling CTE (common table expressions) in these databases. From that time I spread this knowledge and recreated a sample for it several times. The last one was this week and I decided to store it somewhere - this mostly dead blog seems like a good place ;-) So here is a really simple case of using CTE on Oracle.</description>
    </item>
    
    <item>
      <title>Benchmarking an interview question</title>
      <link>https://isopov.github.io/posts/benchmarking-add-exact/</link>
      <pubDate>Sat, 15 Aug 2015 23:22:39 +0300</pubDate>
      
      <guid>https://isopov.github.io/posts/benchmarking-add-exact/</guid>
      <description>Author benchmarks a super-simple method with a dumb implementation from his recent job interview. Results of this benchmark contradict with assumptions. The process of benchmarking produces some public benefit.
So, on a recent job interview it was suggested to write implementation for a really simple method
public int sum(int x, int y); The main question for implementation is surely dealing with integer overflow (we were speaking about Java programming language). As it was left for me to decide what to do in case of overflow I suggested a standard way - throwing exception.</description>
    </item>
    
    <item>
      <title>Learning Vaadin7 Review</title>
      <link>https://isopov.github.io/posts/learning-vaadin7-review/</link>
      <pubDate>Sat, 28 Dec 2013 17:42:46 +0300</pubDate>
      
      <guid>https://isopov.github.io/posts/learning-vaadin7-review/</guid>
      <description>Some time ago I was proposed to review the second edition of the &amp;ldquo;Learning Vaadin 7&amp;rdquo; (On Amazon) book. Shame on me for holding it for so long. Previously I have used Vaadin 6 and was really impressed by its features and simplicity of doing real desktop-like web-applications. But at the same time every now and then I was frustrated by some of the methods and mostly by the methods returning plain Objects.</description>
    </item>
    
  </channel>
</rss>
